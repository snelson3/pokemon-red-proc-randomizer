Unit tests for mapobject
build command, doesn't reset git before building
spoiler log
don't allow broken warps
Option for 1<->1 warps
have red start in oaks lab being able to pick pokemon right away (FirstMapSpec)

WISHLIST
function to randomize the starting pokemon, completely, same types, random types but rps, limit to 3 evos
   doing this right requires changing gary's pokemon in his battles with you
function to randomize the type of all pokemon
    option to replace the moves as well
function to swap base stats, either replace between other mons, or randomly increase/decrease within a threshold
randomize where pokemon appear
randomize trainer parties
randomize warps
text randomizer (or shrinker?)
map randomization, using logic/procedural generation to make the game still make sense
    https://github.com/pret/pokered/issues/158
tileset randomization

Sample "Menu"

Randomize Starters (2 options)
 No / Completely / Limit to 3 Evos
 Same Types / Random Types but RPS
Randomize Types (2 options)
 No / Yes
 Replace typed moves ?

instant speed text hack would be nice

A sign in oakslab should be modified to list the seed and all the arguments used

pull request fixed comments for the mapHeaders as it makes unit tests easier

When I'm solving all the technical debt I will want to make less i/o happen
  Only read files once, and only write them once (only write them if they changed)
  This also means all the randomization happens at a higher level than the file IO